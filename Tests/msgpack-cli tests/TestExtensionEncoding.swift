//
//  TestExtensionEncoding.swift
//  MsgpackSerializationTests iOS
//
//  Created by cherrywoods on 22.02.18.
//
//  These tests are similar to Tests from msgpack-cli
//  The expected msgpack values were partially generated by msgpack-tools
//  (https://github.com/ludocode/msgpack-tools)
//

import XCTest
@testable import MsgpackSerialization

class ExtensionEncoding: XCTestCase {
    
    func testFixExt1Format() {
        
        TestUtilites.testRoundTrip(of: TestExtension(length: 1),
                                   expected: [0xd4, 42, 0])
        
    }
    
    func testFixExt2Format() {
        
        TestUtilites.testRoundTrip(of: TestExtension(length: 2),
                                   expected: [0xd5, 42, 0, 0])
        
    }
    
    func testFixExt4Format() {
        
        TestUtilites.testRoundTrip(of: TestExtension(length: 4),
                                   expected: [0xd6, 42, 0, 0, 0, 0])
        
    }
    
    func testFixExt8Format() {
        
        TestUtilites.testRoundTrip(of: TestExtension(length: 8),
                                   expected: [0xd7, 42, 0, 0, 0, 0, 0, 0, 0, 0])
        
    }
    
    func testFixExt16Format() {
        
        TestUtilites.testRoundTrip(of: TestExtension(length: 16),
                                   expected: [0xd8, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
        
    }
    
    func testExt8Format() {
        
        TestUtilites.testRoundTrip(of: TestExtension(length: 17),
                                   expected: [0xc7, 17, 42, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])
        
    }
    
    func testExt16Format() {
        
        // just test for the right length, from now on
        // total length = header + length + type + data
        TestUtilites.testRoundTrip(of: TestExtension(length: 256), expectedLength: 1 + 2 + 1 + 256)
        TestUtilites.testRoundTrip(of: TestExtension(length: 10_000), expectedLength: 4 + 10_000)
        TestUtilites.testRoundTrip(of: TestExtension(length: 65_535), expectedLength: 4 + 65_535)
        
    }
    
    func testExt32Format() {
        
        TestUtilites.testRoundTrip(of: TestExtension(length: 65_536), expectedLength: 1 + 4 + 1 + 65_536)
        TestUtilites.testRoundTrip(of: TestExtension(length: 80_000), expectedLength: 6 + 80_000)
        
    }
    
    fileprivate struct TestExtension: MsgpackExtension, Equatable {
        
        let length: Int
        
        init(length: Int) {
            self.length = length
        }
        
        var extensionTypeCode: Int8 = 42
        
        init(from data: Data) throws {
            
            // guard that the passed data is valid
            guard data.reduce(0, { return $0 + $1 }) == 0 else {
                throw TestExtension.Errors.invalidData
            }
            
            self.length = data.count
            
        }
        
        func encodeSelf() throws -> Data {
            
            // create data with length bytes
            return Data(repeating: 0, count: length)
            
        }
        
        static func ==(lhs: ExtensionEncoding.TestExtension, rhs: ExtensionEncoding.TestExtension) -> Bool {
            return lhs.length == rhs.length
        }
        
        enum Errors: Error {
            case invalidData
        }
        
    }
    
}

